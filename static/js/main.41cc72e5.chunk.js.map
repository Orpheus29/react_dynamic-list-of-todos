{"version":3,"sources":["types/Filters.ts","TodoContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers/getFilteredTodos.tsx","index.tsx"],"names":["Filters","selectedTodoContext","selectedTodo","setSelectedTodo","TodoContext","React","createContext","TodoProvider","children","useState","value","useMemo","Provider","TodoItem","todo","id","title","completed","useContext","className","classNames","type","onClick","TodoList","memo","todos","map","TodoFilter","selectCategory","filter","setQuery","query","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","useEffect","userId","href","email","name","App","todoItems","setTodoItems","filterByCategory","setFilterByCategory","isLoading","setIsLoading","visibleTodos","category","preparedItems","preparedQuery","trim","toLowerCase","includes","getFilteredTodos","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41cc72e5.chunk.js","sourcesContent":["export enum Filters {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useMemo, useState } from 'react';\nimport { Todo } from './types';\n\ninterface SelectedTodoType {\n  selectedTodo: Todo | null;\n  setSelectedTodo: (selectedTodo: Todo | null) => void;\n}\n\nconst selectedTodoContext: SelectedTodoType = {\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n};\n\nexport const TodoContext = React.createContext(selectedTodoContext);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const value = useMemo(() => ({\n    selectedTodo,\n    setSelectedTodo,\n  }), [selectedTodo]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../../TodoContext';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const { selectedTodo, setSelectedTodo } = useContext(TodoContext);\n\n  return (\n    <tr data-cy=\"todo\" className=\"has-background-info-light\">\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(selectedTodo === todo\n              ? 'far fa-eye-slash'\n              : 'far fa-eye')}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </tbody>\n  </table>\n));\n","import { Filters } from '../../types';\n\ntype Props = {\n  selectCategory: (filter: Filters) => void;\n  filter: Filters;\n  setQuery: (event: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectCategory,\n  filter,\n  setQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={\n              (event) => selectCategory(event.target.value as Filters)\n            }\n          >\n            <option value={Filters.All}>All</option>\n            <option value={Filters.Active}>Active</option>\n            <option value={Filters.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo, User } from './types';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types';\nimport { getUser } from '../../api';\nimport { TodoContext } from '../../TodoContext';\n\ntype Props = {};\n\nexport const TodoModal: React.FC<Props> = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const { selectedTodo, setSelectedTodo } = useContext(TodoContext);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useMemo,\n  useEffect,\n  useContext,\n} from 'react';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\nimport {\n  TodoList,\n  TodoFilter,\n  TodoModal,\n  Loader,\n} from './components';\nimport { getFilteredTodos } from './helpers/getFilteredTodos';\nimport { Todo, Filters } from './types';\nimport { getTodos } from './api';\nimport { TodoContext } from './TodoContext';\n\nexport const App: React.FC = () => {\n  const [todoItems, setTodoItems] = useState<Todo[]>([]);\n  const [filterByCategory, setFilterByCategory] = useState(Filters.All);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n\n  const visibleTodos = useMemo(() => getFilteredTodos(\n    filterByCategory,\n    query,\n    todoItems,\n  ), [query, filterByCategory, todoItems]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodoItems)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const { selectedTodo } = useContext(TodoContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectCategory={setFilterByCategory}\n                filter={filterByCategory}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (<Loader />)}\n              <TodoList\n                todos={visibleTodos}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import { Filters, Todo } from '../types';\n\nexport function getFilteredTodos(\n  category: Filters,\n  query: string,\n  todoItems: Todo[],\n) {\n  let preparedItems: Todo[] = todoItems;\n\n  if (category !== Filters.All) {\n    preparedItems = preparedItems\n      .filter(({ completed }) => {\n        switch (category) {\n          case Filters.Active:\n            return !completed;\n          case Filters.Completed:\n            return completed;\n          default:\n            return Filters.All;\n        }\n      });\n  }\n\n  if (query) {\n    const preparedQuery = query.trim().toLowerCase();\n\n    preparedItems = preparedItems\n      .filter(({ title }) => title.toLowerCase()\n        .includes(preparedQuery));\n  }\n\n  return preparedItems;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}